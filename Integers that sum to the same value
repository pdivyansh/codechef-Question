Problem
Alice has a positive integer N. She is wondering how many ordered pairs of positive integers (i,j) exist such that i + j = N

Help Alice figure out the answer.

Note that since the pairs are ordered (1,2) and (2,1) are considered different.

Input Format
The first and only line of input contains a single integer N.

Output Format
Print a single integer, the number of ordered pairs of positive integers (i, j) such that i + j = N

Constraints
1≤N≤100
Sample 1:
Input
1
Output
0
Explanation:
As both integers must be positive, the minimum sum must be 1 + 1 = 2. Therefore there are no pairs of positive integers adding up to 1.

Sample 2:
Input
2
Output
1
Explanation:
(1,1) is the only pair whose sum is 2. Every other pair has a sum of at least 3.

Sample 3:
Input
3
Output
2
Explanation:
The two pairs are (1, 2) and (2, 1).


////////////////////////////////////////////////////////////////////////////////////////////////////

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int pairCount=0;
		for(int i=1;i<n;i++){
		    for(int j=1;j<n;j++){
		        
		        if(i+j==n){
		            pairCount++;
		        }
		    }
		}
		System.out.println(pairCount);
		
	}
}
