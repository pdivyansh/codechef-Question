Problem
Chef has an array A of length N.

Chef forms a binary array B of length N using the parity of the sums of adjacent elements in A. Formally,

B_i = (A_i + A_{i+1} )%2 for 1≤i≤N−1
B_N = (A_N + A_1)%2
Here x%y denotes the remainder obtained when x is divided by y.

Chef lost the array A and needs your help. Given array B, determine whether there exits any valid array A which could have formed B.

Input Format
The first line contains a single integer T — the number of test cases. Then the test cases follow.
The first line of each test case contains an integer N — the size of the array A.
The second line of each test case contains NN space-separated integers B_1, B_2,..., B_N denoting the array B.


Output Format
For each testcase, output YES if there exists a valid array A, NO otherwise.

You can print any character in any case. For example YES, Yes, yEs are all considered same.

Constraints
1≤T≤1000
2≤N≤10^5
 B_i ∈{0,1}
The sum of N over all test cases do not exceed 3⋅10^5
 .
Sample 1:
Input
4
2
0 0
2
1 0
4
1 0 1 0
3
1 0 0
Output
YES
NO
YES
NO
Explanation:
Test case 1: One such valid array is A = [3, 3].

Test case 2: It can be shown that no such arrays exist and are valid.

Test case 3: One such valid array is A = [1, 2, 4, 5].

B_1 =1 since A_1 + A_2 = 1 + 2 = 3 and 3%2=1
B_2 =0 since A_2 + A_3 = 2 + 4 =6 and 6%2=0
B_3 =1 since A_3 + A_4 = 4 + 5 = 9 and 9%2=1
B_4 =0 since A_4 + A_1 = 5 + 1 =6 and 6%2=0

//////////////////////////////
////////////////////////////////////
////////////////////////////////////////////////////

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t>0){
		    int n=sc.nextInt();
		    int brr[]=new int[n];
		    
		    for(int i=0;i<n;i++){
		        brr[i]=sc.nextInt();
		    }
		    int arr[]=new int[n];
		    arr[0]=1;
		    for(int i=0;i<n-1;i++){
		        if((arr[i]+1)%2==brr[i]){
		            arr[i+1]=1;
		        }else if((arr[i]+2)%2==brr[i]){
		            arr[i+1]=2;
		        }
		    }
		    if((arr[0]+arr[n-1])%2==brr[n-1]){
		        System.out.println("YES");
		    }else{
		        System.out.println("NO");
		    }
		    
		    t--;
		}
	}
}
